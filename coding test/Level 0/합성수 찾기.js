// https://school.programmers.co.kr/learn/courses/30/lessons/120846
// 프로그래머스 0단계 : 합성수 찾기
function solution(n) {
    let result = 0;
    let arr = []
    
    for(let i = 1; i<=n; i++){ // n이하의 자연수들을 반복시키면서 약수를 구하는 반복문
        for(let j = 1; j<=n; j++){ // n이하의 자연수들을 1~n까지 % 약수를 체크
            i % j === 0 ? arr.push(j) : null
        }
        arr.length > 2 ? result++ : null
        arr = []
    }
    return result
}

/* 문제풀이
합성수라는 것은 하나의 숫자의 약수가 3개이상임을 뜻한다
1. 우리는 i라는 반복문을 n번까지 돌면서 ex ) n이 10이라면 1~10까지의 자연수의 약수의 개수를 구해야 하므로 자연수들을 반복시켜준다
2. j라는 반복문을 n번까지 돌면서 아까 만든 i라는 반복문의 자연수를 가지고 1~n까지 약수를 찾기 위해 반복문을 생성함
3. if 조건문을 사용해서 i % j 가 === 0 이라면 arr 라는 배열에 push 해준다 j를 아니라면   null 
4. 그러면 우리는 2번째 j 반복문이 끝나면 그 arr라는 배열에 i에 대한 약수가 들어 있을것이다 그러면 우리는 arr의 길이를 비교하며 3이상이면 합성수 이기 때문에 result에다가 1를 더해준다
그리고 i반복문으로 가기전에 j반복문에서 약수를 찾기 위해  arr 배열에 넣어줬던걸 비워주고 다시 i 반복문의 2번째로 이동을 하면서 계속 약수를 하나하나씩 찾아주면 된다
*/